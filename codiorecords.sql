-- Adminer 4.2.5 MySQL dump

SET NAMES utf8;
SET time_zone = '+00:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

INSERT INTO `codio_code` (`id`, `title`, `add_date`, `language`, `usage`, `code_text`, `input_output`, `level`, `tags`, `developer_id`) VALUES
(1,	'Permute String',	'2016-12-10 09:47:16.000000',	'JAVA',	'This code will help to show all the permutations of a string. To use the code simply call it: <br>\r\nex - <b>permutation(\"\",stringToPermute); </b><br>\r\nThe output will be shown Using <b>System.out.println()</b> but you can show the output anywhere you like.',	'import java.util.*;\r\n\r\npublic class PermuteString {\r\n\r\n\r\n    public static void main(String[] args) {\r\n        String s = (new Scanner(System.in)).nextLine();\r\n         permutation(\"\",s);\r\n    }\r\n    \r\n/* usage: permutation(\"\",stringToPermute);*/\r\nprivate static void permutation(String prefix, String str) {\r\n    int n = str.length();\r\n    if (n == 0) System.out.println(prefix);\r\n    else {\r\n        for (int i = 0; i < n; i++)\r\n            permutation(prefix + str.charAt(i), str.substring(0, i) + str.substring(i+1, n));\r\n    }\r\n}\r\n    \r\n}',	'Input: \r\nabc\r\n\r\nOutput:\r\nabc\r\nacb\r\nbac\r\nbca\r\ncab\r\ncba',	2,	'permute,string,recursion',	1),
(8,	'Sum of n Numbers',	'2016-12-10 09:47:16.000000',	'JAVA',	'This code asks the user to input an integer and displays the sum of the numbers starting from 1 to that number.\r\nEx-\r\nuser input : 5\r\nthen sum will be : 1+2+3+4+5 = 15',	'import java.util.*;\r\npublic class sumN {\r\n    public static void main(String args[]){\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"How many numbers to add?\");\r\n        int n = sc.nextInt();\r\n        int sum = 0;\r\n        for (int i=1;i<=n;i++)\r\n            sum+=i;\r\n        System.out.println(\"Sum is :\" + sum);\r\n    }\r\n}',	'Input:\r\nHow many numbers to add?\r\n5\r\n\r\nOutput:\r\nSum is :15',	0,	'sum,loop',	1),
(9,	'Check Palindrome',	'2016-12-10 09:47:16.000000',	'JAVA',	'This code will take a number input and will then check if the reverse of it is equal to it. ie if its palindrome.',	'import java.util.*;\r\npublic class palindrome {\r\n     public static void main(String args[]){\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"Enter a Number:\");\r\n        int n = sc.nextInt();\r\n        int ntmp = n;\r\n        int rev= 0;\r\n        \r\n        while(ntmp>0){\r\n            rev=rev*10+ntmp%10;\r\n            ntmp/=10;\r\n        }\r\n        \r\n        if (rev==n)\r\n            System.out.println(\"Its Palindrome\");\r\n        else\r\n            System.out.println(\"Its not Palindrome\");\r\n    }\r\n}',	'Input:\r\nEnter a Number:\r\n232\r\n\r\nOutput:\r\nIts Palindrome',	0,	'palindrome',	1),
(10,	'GCD and LCM',	'2016-12-10 09:47:16.000000',	'JAVA',	'This is a simple code which can be used to calculate GCD and LCM of two numbers.',	'import java.util.Scanner;\r\n \r\npublic class GCD_LCM \r\n{\r\n    static int gcd(int x, int y)\r\n    {\r\n        int r=0, a, b;\r\n        a = (x > y) ? x : y; /* a is greater number*/\r\n        b = (x < y) ? x : y; /* b is smaller number*/\r\n \r\n        r = b;\r\n        while(a % b != 0)\r\n        {\r\n            r = a % b;\r\n            a = b;\r\n            b = r;\r\n        }\r\n        return r;\r\n    }\r\n \r\n    static int lcm(int x, int y)\r\n    {\r\n        int a;\r\n        a = (x > y) ? x : y; /* a is greater number*/\r\n        while(true)\r\n        {\r\n            if(a % x == 0 && a % y == 0)\r\n                return a;\r\n            ++a;\r\n        }	\r\n    }\r\n \r\n    public static void main(String args[])\r\n    {\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.println(\"Enter the two numbers: \");\r\n        int x = input.nextInt();\r\n        int y = input.nextInt();\r\n \r\n        System.out.println(\"The GCD of two numbers is: \" + gcd(x, y));\r\n        System.out.println(\"The LCM of two numbers is: \" + lcm(x, y));\r\n        input.close();		\r\n    }\r\n}',	'Input:\r\nEnter the two numbers: \r\n15\r\n25\r\n\r\nOutput:\r\nThe GCD of two numbers is: 5\r\nThe LCM of two numbers is: 75',	1,	'GCD,LCM,HCF',	1),
(11,	'Fibonacci Series',	'2016-12-10 09:47:16.000000',	'JAVA',	'This Program prints n terms of a fibonacci series. The n input is taken by the user.',	'import java.util.*;\r\npublic class fibonacci {\r\n    public static void main(String args[]){\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"Enter Number of terms:\");\r\n        int n = sc.nextInt();\r\n        int n1=0,n2=1,tmp;\r\n        System.out.print(\"The Series: \\n0\\n1\\n\");\r\n        for (int i=2; i<n ;i++)\r\n        {\r\n            tmp=n1+n2;\r\n            n1=n2;\r\n            n2=tmp;\r\n            System.out.print(tmp+\"\\n\");\r\n        }\r\n    }\r\n}',	'Input:\nEnter Number of terms:\r\n5\n\nOutput:\nThe Series: \r\n0\r\n1\r\n1\r\n2\r\n3',	0,	'fibonacci,series',	1),
(12,	'Quadratic Equation Roots',	'2016-12-10 09:47:16.000000',	'JAVA',	'This code can be used to find the real roots of a quadratic equation.',	'import java.util.*;\r\npublic class QuadraticEquation {\r\n    \r\n    public static void main(String[] args)\r\n    {   Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"Enter the Values of a,b,c\");\r\n	int a = sc.nextInt();\r\n        int b = sc.nextInt();\r\n        int c = sc.nextInt();\r\n	/*Finding out the roots*/\r\n	double temp1 = Math.sqrt(b * b - 4 * a * c);\r\n\r\n	double root1 = (-b +  temp1) / (2*a) ;\r\n	double root2 = (-b -  temp1) / (2*a) ;\r\n	System.out.println(\"Roots:\\n\"+root1+\"\\n\"+root2);\r\n    }\r\n}',	'Input:\r\nEnter the Values of a,b,c\r\n1\r\n-5\r\n6\r\n\r\nOutput:\r\nRoots:\r\n3.0\r\n2.0',	1,	'quadratic,equation,roots,real',	1),
(13,	'Selection Sort',	'2016-12-10 09:47:16.000000',	'JAVA',	'This code is can be used to sort an array of numbers in ascending order using the Selection sort technique.',	'import java.util.*;\r\npublic class SelectionSort {\r\n    public static void main(String args[]){\r\n        Scanner sc = new Scanner(System.in);\r\n        \r\n      int pos=0,tmp=0;\r\n        System.out.print(\"How many Array Elements?\\n\");\r\n      int n = sc.nextInt();\r\n        \r\n      int a[] = new int[n];\r\n        System.out.println(\"Enter the Elements:\\n\");\r\n        for (int i=0;i<n;i++)\r\n            a[i]=sc.nextInt();\r\n        \r\n        for (int i = 0;i<n;i++)\r\n        {\r\n            pos=i;\r\n            for (int j = i+1;j<n;j++)\r\n            {\r\n                if(a[pos]>a[j])\r\n                    pos = j;\r\n            }\r\n            if (pos!=i)\r\n            {\r\n                tmp=a[i];\r\n                a[i]=a[pos];\r\n                a[pos]=tmp;\r\n            }\r\n        }\r\n        System.out.println(\"Sorted:\");\r\n        for (int i=0;i<n;i++)\r\n            System.out.println(a[i]); \r\n    }\r\n}',	'Input:\nHow many Array Elements?\r\n5\r\nEnter the Elements:\r\n24\r\n64\r\n12\r\n8\r\n59\n\nOutput:\nSorted:\r\n8\r\n12\r\n24\r\n59\r\n64',	0,	'selection,sort',	1),
(14,	'Binary Search',	'2016-12-10 09:47:16.000000',	'JAVA',	'This code can be used to perform a search in an array of numbers by using the binary search algorithm.<br><img src=\"https://blog.penjee.com/wp-content/uploads/2015/11/binary-search-tree-sorted-array-animation.gif\" width=\"40%\">',	'import java.util.*;\r\npublic class BinarySearch {\r\n        public static void main(String args[]){\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        System.out.print(\"How many Array Elements?\\n\");\r\n      int n = sc.nextInt();\r\n      int low=0,high=n-1,mid=0;\r\n      int a[] = new int[n];\r\n        System.out.println(\"Enter the Elements:\");\r\n        for (int i=0;i<n;i++)\r\n            a[i]=sc.nextInt();\r\n        \r\n       System.out.println(\"Enter the element to search:\");\r\n        int key = sc.nextInt();\r\n        \r\n        while(low<=high)\r\n        {\r\n            mid=(low+high)/2;\r\n            if (a[mid]==key)\r\n                break;\r\n            else if(a[mid]<key)\r\n                low=mid+1;\r\n            else\r\n                high=mid-1;\r\n        }\r\n        if (low<=high)\r\n            System.out.println(\"Position: \" + ++mid);\r\n        else\r\n            System.out.println(\"Not Found\");\r\n        \r\n  }\r\n}',	'Input:\r\nHow many Array Elements?\r\n5\r\nEnter the Elements:\r\n1\r\n3\r\n5\r\n6\r\n8\r\nEnter the element to search:\r\n6\r\n\r\nOutput:\r\nPosition: 4',	1,	'binary,search,algorithm',	1),
(15,	'Post from PHP Script',	'2016-12-10 09:47:16.000000',	'PHP',	'Generally a HTML form is required to send a POST to a php page, but this can can be used  to post from the php script itself.',	'// where are we posting to?\r\n$url = \'http://foo.com/script.php\';\r\n\r\n// what post fields?\r\n$fields = array(\r\n   \'field1\' => $field1,\r\n   \'field2\' => $field2,\r\n);\r\n\r\n// build the urlencoded data\r\n$postvars = http_build_query($fields);\r\n\r\n// open connection\r\n$ch = curl_init();\r\n\r\n// set the url, number of POST vars, POST data\r\ncurl_setopt($ch, CURLOPT_URL, $url);\r\ncurl_setopt($ch, CURLOPT_POST, count($fields));\r\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $postvars);\r\n\r\n// execute post\r\n$result = curl_exec($ch);\r\n\r\n// close connection\r\ncurl_close($ch);',	'Input:\r\nfield1=value1\r\nfield2=value2\r\n\r\nOutput:\r\nPost to XYZ.php',	1,	'post',	1),
(16,	'Odd or Even',	'2016-12-10 09:47:16.000000',	'C',	'This code can be used to check if a no is odd or even',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int n;\r\n \r\n   printf(\"Enter an integer\\n\");\r\n   scanf(\"%d\", &n);\r\n \r\n   if (n%2 == 0)\r\n      printf(\"Even\\n\");\r\n   else\r\n      printf(\"Odd\\n\");\r\n \r\n   return 0;\r\n}',	'Input:\nEnter an integer\r\n4\n\nOutput:\nEven',	0,	'odd,even',	1),
(17,	'Leap Year',	'2016-12-10 09:47:16.000000',	'C',	'This program can be used to check if the given year is a leap year or not.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n  int year;\r\n \r\n  printf(\"Enter a year to check if it is a leap year\\n\");\r\n  scanf(\"%d\", &year);\r\n \r\n  if ( year%400 == 0)\r\n    printf(\"%d is a leap year.\\n\", year);\r\n  else if ( year%100 == 0)\r\n    printf(\"%d is not a leap year.\\n\", year);\r\n  else if ( year%4 == 0 )\r\n    printf(\"%d is a leap year.\\n\", year);\r\n  else\r\n    printf(\"%d is not a leap year.\\n\", year);  \r\n \r\n  return 0;\r\n}',	'Input:\nEnter a year to check if it is a leap year\r\n2016\n\nOutput:\n2016 is a leap year',	0,	'leap,year',	1),
(18,	'Factorial',	'2016-12-10 09:47:16.000000',	'C',	'This program returns the factorial of any number\r\nex - 5\r\n5*4*3*2*1 = 120',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n  int c, n, fact = 1;\r\n \r\n  printf(\"Enter a number to calculate it\'s factorial\\n\");\r\n  scanf(\"%d\", &n);\r\n \r\n  for (c = 1; c <= n; c++)\r\n    fact = fact * c;\r\n \r\n  printf(\"Factorial of %d = %d\\n\", n, fact);\r\n \r\n  return 0;\r\n}',	'Input:\nEnter a number to calculate it\'s factorial\r\n\r\n5\n\nOutput:\nFactorial of 5 = 120',	0,	'factorial',	1),
(19,	'nCr and nPr',	'2016-12-10 09:47:16.000000',	'C',	'C program to find nCr and nPr: This code calculate nCr which is n!/(r!*(n-r)!) and nPr = n!/(n-r)!',	'#include <stdio.h>\r\n \r\nlong factorial(int);\r\nlong find_ncr(int, int);\r\nlong find_npr(int, int);\r\n \r\nint main()\r\n{\r\n   int n, r;\r\n   long ncr, npr;\r\n \r\n   printf(\"Enter the value of n and r\\n\");\r\n   scanf(\"%d%d\",&n,&r);\r\n \r\n   ncr = find_ncr(n, r);\r\n   npr = find_npr(n, r);\r\n \r\n   printf(\"%dC%d = %ld\\n\", n, r, ncr);\r\n   printf(\"%dP%d = %ld\\n\", n, r, npr);\r\n \r\n   return 0;\r\n}\r\n \r\nlong find_ncr(int n, int r) {\r\n   long result;\r\n \r\n   result = factorial(n)/(factorial(r)*factorial(n-r));\r\n \r\n   return result;\r\n}\r\n \r\nlong find_npr(int n, int r) {\r\n   long result;\r\n \r\n   result = factorial(n)/factorial(n-r);\r\n \r\n   return result;\r\n} \r\n \r\nlong factorial(int n) {\r\n   int c;\r\n   long result = 1;\r\n \r\n   for (c = 1; c <= n; c++)\r\n      result = result*c;\r\n \r\n   return result;\r\n}',	'Input:\nEnter the value of n and r\r\n5\r\n2\n\nOutput:\n5C2 = 10\r\n5P2 = 20',	0,	'permutation,combination,npr,ncr',	1),
(20,	'Swap Numbers',	'2016-12-10 09:47:16.000000',	'C',	'This code can be used to swap two variables. \r\nEx \r\na=5,b=6     =>     a=6 , b=5',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int x, y, temp;\r\n \r\n   printf(\"Enter the value of x and y\\n\");\r\n   scanf(\"%d%d\", &x, &y);\r\n \r\n   printf(\"Before Swapping\\nx = %d\\ny = %d\\n\",x,y);\r\n \r\n   temp = x;\r\n   x    = y;\r\n   y    = temp;\r\n \r\n   printf(\"After Swapping\\nx = %d\\ny = %d\\n\",x,y);\r\n \r\n   return 0;\r\n}',	'Input:\nEnter the value of x and y\r\n4\r\n5\n\nOutput:\nBefore Swapping\r\n4\r\n5\r\nAfter Swapping\r\n5\r\n4',	0,	'swap',	1),
(21,	'Reverse Number',	'2016-12-10 09:47:16.000000',	'C',	'This program reverses  a number.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int n, reverse = 0;\r\n \r\n   printf(\"Enter a number to reverse\\n\");\r\n   scanf(\"%d\", &n);\r\n \r\n   while (n != 0)\r\n   {\r\n      reverse = reverse * 10;\r\n      reverse = reverse + n%10;\r\n      n       = n/10;\r\n   }\r\n \r\n   printf(\"Reverse of entered number is = %d\\n\", reverse);\r\n \r\n   return 0;\r\n}',	'Input:\r\nEnter a number to reverse\r\n12345\r\n\r\nOutput:\r\nReverse of entered number is = 54321',	1,	'reverse,number',	1),
(22,	'Check Prime Number',	'2016-12-10 09:47:16.000000',	'C',	'To check whether the given number is prime or not. This program makes use of a method.',	'#include<stdio.h>\r\n#include<math.h>\r\nint check_prime(int);\r\n \r\nmain()\r\n{\r\n   int n, result;\r\n \r\n   printf(\"Enter an integer to check whether it is prime or not.\\n\");\r\n   scanf(\"%d\",&n);\r\n \r\n   result = check_prime(n);\r\n \r\n   if ( result == 1 )\r\n      printf(\"%d is prime.\\n\", n);\r\n   else\r\n      printf(\"%d is not prime.\\n\", n);\r\n \r\n   return 0;\r\n}\r\n \r\nint check_prime(int a)\r\n{\r\n   int c;\r\n \r\n   for ( c = 2 ; c <=sqrt( a) ; c++ )\r\n   { \r\n      if ( a%c == 0 )\r\n	 return 0;\r\n   }\r\n   if ( c == a )\r\n      return 1;\r\n}',	'Input:\nEnter an integer to check whether it is prime or not.\r\n17\n\nOutput:\n17 is prime',	0,	'prime,check,method',	1),
(23,	'Armstrong Number',	'2016-12-10 09:47:16.000000',	'C',	'Usage : EditThis program checks weather a given number is Armstrong Number or Not. <br>\r\nEx- 7 = 7^1 <br>\r\n371 = 3^3 + 7^3 + 1^3 =(27 + 343 +1) = 371 <br>\r\n8208 = 8^4 + 2^4 +0^4 + 8^4 (4096 + 16 + 0 + 4096)=8208 <br>\r\n1741725 = 1^7 + 7^7 + 4^7 + 1^7 + 7^7 + 2^7 +5^7 (1 + 823543 + 16384 + 1 + 823543 +128 + 78125) = 1741725',	'#include <stdio.h>\r\n \r\nint power(int, int);\r\n \r\nint main()\r\n{\r\n   int n, sum = 0, temp, remainder, digits = 0;\r\n \r\n   printf(\"Input an integer\\n\");\r\n   scanf(\"%d\", &n);\r\n \r\n   temp = n;\r\n   // Count number of digits\r\n   while (temp != 0) {\r\n      digits++;\r\n      temp = temp/10;\r\n   }\r\n \r\n   temp = n;\r\n \r\n   while (temp != 0) {\r\n      remainder = temp%10;\r\n      sum = sum + power(remainder, digits);\r\n      temp = temp/10;\r\n   }\r\n \r\n   if (n == sum)\r\n      printf(\"%d is an Armstrong number.\\n\", n);\r\n   else\r\n      printf(\"%d is not an Armstrong number.\\n\", n);\r\n \r\n   return 0;\r\n}\r\n \r\nint power(int n, int r) {\r\n   int c, p = 1;\r\n \r\n   for (c = 1; c <= r; c++) \r\n      p = p*n;\r\n \r\n   return p;   \r\n}',	'Input:\r\nInput an Integer\r\n9926315\r\n\r\nOutput:\r\n9926315 is an armstrong number.',	1,	'armstrong',	1),
(24,	'Check the Vowel',	'2016-12-10 09:47:16.000000',	'C',	'The program checks if the given character is a vowel or not',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n  char ch;\r\n \r\n  printf(\"Enter a character\\n\");\r\n  scanf(\"%c\", &ch);\r\n \r\n  if (ch == \'a\' || ch == \'A\' || ch == \'e\' || ch == \'E\' || ch == \'i\' || ch == \'I\' || ch ==\'o\' || ch==\'O\' || ch == \'u\' || ch == \'U\')\r\n    printf(\"%c is a vowel.\\n\", ch);\r\n  else\r\n    printf(\"%c is not a vowel.\\n\", ch);\r\n \r\n  return 0;\r\n}',	'Input:\nEnter a character\r\ne\n\nOutput:\ne is a vowel.',	0,	'check,vowel,char',	1),
(25,	'Linear Search',	'2016-12-10 09:47:16.000000',	'C',	'This program implements the linear search algorithm for an array',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int array[100], search, c, n;\r\n \r\n   printf(\"Enter the number of elements in array\\n\");\r\n   scanf(\"%d\",&n);\r\n \r\n   printf(\"Enter %d integer(s)\\n\", n);\r\n \r\n   for (c = 0; c < n; c++)\r\n      scanf(\"%d\", &array[c]);\r\n \r\n   printf(\"Enter the number to search\\n\");\r\n   scanf(\"%d\", &search);\r\n \r\n   for (c = 0; c < n; c++)\r\n   {\r\n      if (array[c] == search)     /* if required element found */\r\n      {\r\n         printf(\"%d is present at location %d.\\n\", search, c+1);\r\n         break;\r\n      }\r\n   }\r\n   if (c == n)\r\n      printf(\"%d is not present in array.\\n\", search);\r\n \r\n   return 0;\r\n}',	'Input:\nEnter the number of elements in array\r\n4\r\nEnter 4 integer(s)\r\n1\r\n3\r\n5\r\n6\r\nEnter the number to search\r\n5\n\nOutput:\n5 is present at location 4',	0,	'linear,search',	1),
(26,	'Binary Search',	'2016-12-10 09:47:16.000000',	'C',	'This is code to do binary search on an array using c',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int c, first, last, middle, n, search, array[100];\r\n \r\n   printf(\"Enter number of elements\\n\");\r\n   scanf(\"%d\",&n);\r\n \r\n   printf(\"Enter %d integers\\n\", n);\r\n \r\n   for (c = 0; c < n; c++)\r\n      scanf(\"%d\",&array[c]);\r\n \r\n   printf(\"Enter value to find\\n\");\r\n   scanf(\"%d\", &search);\r\n \r\n   first = 0;\r\n   last = n - 1;\r\n   middle = (first+last)/2;\r\n \r\n   while (first <= last) {\r\n      if (array[middle] < search)\r\n         first = middle + 1;    \r\n      else if (array[middle] == search) {\r\n         printf(\"%d found at location %d.\\n\", search, middle+1);\r\n         break;\r\n      }\r\n      else\r\n         last = middle - 1;\r\n \r\n      middle = (first + last)/2;\r\n   }\r\n   if (first > last)\r\n      printf(\"Not found! %d is not present in the list.\\n\", search);\r\n \r\n   return 0;   \r\n}',	'Input:\r\nEnter number of elements\r\n5\r\nEnter 5 integers\r\n1\r\n3\r\n5\r\n7\r\n9\r\nEnter value to find\r\n7\r\n\r\nOutput:\r\n7 found at location 4',	1,	'search,binary',	1),
(27,	'reverse an array',	'2016-12-10 09:47:16.000000',	'C',	'C program to reverse the array elements.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int n, c, d, a[100], b[100];\r\n \r\n   printf(\"Enter the number of elements in array\\n\");\r\n   scanf(\"%d\", &n);\r\n \r\n   printf(\"Enter the array elements\\n\");\r\n \r\n   for (c = 0; c < n ; c++)\r\n      scanf(\"%d\", &a[c]);\r\n \r\n   /*\r\n    * Copying elements into array b starting from end of array a\r\n    */\r\n \r\n   for (c = n - 1, d = 0; c >= 0; c--, d++)\r\n      b[d] = a[c];\r\n \r\n   /*\r\n    * Copying reversed array into original.\r\n    * Here we are modifying original array, this is optional.\r\n    */\r\n \r\n   for (c = 0; c < n; c++)\r\n      a[c] = b[c];\r\n \r\n   printf(\"Reverse array is\\n\");\r\n \r\n   for (c = 0; c < n; c++)\r\n      printf(\"%d\\n\", a[c]);\r\n \r\n   return 0;\r\n}',	'Input:\r\nEnter the number of elements in array\r\n5\r\nEnter the array elements\r\n4\r\n8\r\n5\r\n34\r\n2\r\n\r\nOutput:\r\nReverse array is \r\n2\r\n34\r\n5\r\n8\r\n4',	0,	'reverse,array',	1),
(28,	'Insertion Sort',	'2016-12-10 09:47:16.000000',	'C',	'c program for insertion sort to sort numbers. This code implements insertion sort algorithm to arrange numbers of an array in ascending order.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n  int n, array[1000], c, d, t;\r\n \r\n  printf(\"Enter number of elements\\n\");\r\n  scanf(\"%d\", &n);\r\n \r\n  printf(\"Enter %d integers\\n\", n);\r\n \r\n  for (c = 0; c < n; c++) {\r\n    scanf(\"%d\", &array[c]);\r\n  }\r\n \r\n  for (c = 1 ; c <= n - 1; c++) {\r\n    d = c;\r\n \r\n    while ( d > 0 && array[d] < array[d-1]) {\r\n      t          = array[d];\r\n      array[d]   = array[d-1];\r\n      array[d-1] = t;\r\n \r\n      d--;\r\n    }\r\n  }\r\n \r\n  printf(\"Sorted list in ascending order:\\n\");\r\n \r\n  for (c = 0; c <= n - 1; c++) {\r\n    printf(\"%d\\n\", array[c]);\r\n  }\r\n \r\n  return 0;\r\n}',	'Input:\r\nEnter number of elements\r\n5\r\nEnter 5 integers\r\n2\r\n4\r\n1\r\n3\r\n6\r\n\r\nOutput:\r\nSorted list in ascending order\r\n1\r\n2\r\n3\r\n4\r\n6',	1,	'insertion,sort',	1),
(29,	'Selection Sort',	'2016-12-10 09:47:16.000000',	'C',	'Selection sort in c: c program for selection sort to sort numbers.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int array[100], n, c, d, position, swap;\r\n \r\n   printf(\"Enter number of elements\\n\");\r\n   scanf(\"%d\", &n);\r\n \r\n   printf(\"Enter %d integers\\n\", n);\r\n \r\n   for ( c = 0 ; c < n ; c++ )\r\n      scanf(\"%d\", &array[c]);\r\n \r\n   for ( c = 0 ; c < ( n - 1 ) ; c++ )\r\n   {\r\n      position = c;\r\n \r\n      for ( d = c + 1 ; d < n ; d++ )\r\n      {\r\n         if ( array[position] > array[d] )\r\n            position = d;\r\n      }\r\n      if ( position != c )\r\n      {\r\n         swap = array[c];\r\n         array[c] = array[position];\r\n         array[position] = swap;\r\n      }\r\n   }\r\n \r\n   printf(\"Sorted list in ascending order:\\n\");\r\n \r\n   for ( c = 0 ; c < n ; c++ )\r\n      printf(\"%d\\n\", array[c]);\r\n \r\n   return 0;\r\n}',	'Input:\r\nEnter number of elements\r\n5\r\nEnter 5 integers\r\n2\r\n4\r\n1\r\n3\r\n6\r\n\r\nOutput:\r\nSorted list in ascending order\r\n1\r\n2\r\n3\r\n4\r\n6',	1,	'selection,sort',	1),
(30,	'Add two Matrix',	'2016-12-10 09:47:16.000000',	'C',	'This c program add two matrices i.e. compute the sum of two matrices and then print it.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int m, n, c, d, first[10][10], second[10][10], sum[10][10];\r\n \r\n   printf(\"Enter the number of rows and columns of matrix\\n\");\r\n   scanf(\"%d%d\", &m, &n);\r\n   printf(\"Enter the elements of first matrix\\n\");\r\n \r\n   for (c = 0; c < m; c++)\r\n      for (d = 0; d < n; d++)\r\n         scanf(\"%d\", &first[c][d]);\r\n \r\n   printf(\"Enter the elements of second matrix\\n\");\r\n \r\n   for (c = 0; c < m; c++)\r\n      for (d = 0 ; d < n; d++)\r\n            scanf(\"%d\", &second[c][d]);\r\n \r\n   printf(\"Sum of entered matrices:-\\n\");\r\n \r\n   for (c = 0; c < m; c++) {\r\n      for (d = 0 ; d < n; d++) {\r\n         sum[c][d] = first[c][d] + second[c][d];\r\n         printf(\"%d\\t\", sum[c][d]);\r\n      }\r\n      printf(\"\\n\");\r\n   }\r\n \r\n   return 0;\r\n}',	'Input:\nEnter the number of rows and columns of matrix\r\n2\r\n2\r\nEnter the elements of first matrix\r\n1\r\n2\r\n3\r\n4\r\nEnter the elements of second matrix\r\n5\r\n6\r\n2\r\n1\n\nOutput:\nSum of entered matrices:-\r\n6   8\r\n5   5',	0,	'matrix,sum,add',	1),
(31,	'Substract two Matrix',	'2016-12-10 09:47:16.000000',	'C',	'C code to subtract matrices of any order.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int m, n, c, d, first[10][10], second[10][10], difference[10][10];\r\n \r\n   printf(\"Enter the number of rows and columns of matrix\\n\");\r\n   scanf(\"%d%d\", &m, &n);\r\n   printf(\"Enter the elements of first matrix\\n\");\r\n \r\n   for (c = 0; c < m; c++)\r\n     for (d = 0 ; d < n; d++)\r\n       scanf(\"%d\", &first[c][d]);\r\n \r\n   printf(\"Enter the elements of second matrix\\n\");\r\n \r\n   for (c = 0; c < m; c++)\r\n     for (d = 0; d < n; d++)\r\n         scanf(\"%d\", &second[c][d]);\r\n \r\n   printf(\"Difference of entered matrices:-\\n\");\r\n \r\n   for (c = 0; c < m; c++) {\r\n     for (d = 0; d < n; d++) {\r\n       difference[c][d] = first[c][d] - second[c][d];\r\n       printf(\"%d\\t\",difference[c][d]);\r\n     } \r\n     printf(\"\\n\");\r\n   }\r\n \r\n   return 0;\r\n}',	'Input:\nEnter the number of rows and columns of matrix\r\n2\r\n2\r\nEnter the elements of first matrix\r\n4\r\n5\r\n6\r\n4\r\nEnter the elements of second matrix\r\n1\r\n3\r\n2\r\n1\n\nOutput:\nDifference of entered matrices:-\r\n3   2\r\n4   3',	0,	'substract,difference,matrix',	1),
(32,	'Transpose a Matrix',	'2016-12-10 09:47:16.000000',	'C',	'This c program prints transpose of a matrix. It is obtained by interchanging rows and columns of a matrix.',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n   int m, n, c, d, matrix[10][10], transpose[10][10];\r\n \r\n   printf(\"Enter the number of rows and columns of matrix\\n\");\r\n   scanf(\"%d%d\", &m, &n);\r\n \r\n   printf(\"Enter the elements of matrix\\n\");\r\n \r\n   for (c = 0; c < m; c++)\r\n      for(d = 0; d < n; d++)\r\n         scanf(\"%d\",&matrix[c][d]);\r\n \r\n   for (c = 0; c < m; c++)\r\n      for( d = 0 ; d < n ; d++ )\r\n         transpose[d][c] = matrix[c][d];\r\n \r\n   printf(\"Transpose of entered matrix :-\\n\");\r\n \r\n   for (c = 0; c < n; c++) {\r\n      for (d = 0; d < m; d++)\r\n         printf(\"%d\\t\",transpose[c][d]);\r\n      printf(\"\\n\");\r\n   }\r\n \r\n   return 0;\r\n}',	'Input:\r\nEnter the number of rows and columns of matrix\r\n2\r\n3\r\nEnter the elements of matrix\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n\r\nOutput:\r\nTranspose of entered matrix :-\r\n1   4\r\n2   5\r\n3   6',	1,	'transpose,matrix',	1),
(33,	'Matrix Multiplication',	'2016-12-10 09:47:16.000000',	'C',	'Matrix multiplication in c language. this program multiplies two matrices which will be entered by the user',	'#include <stdio.h>\r\n \r\nint main()\r\n{\r\n  int m, n, p, q, c, d, k, sum = 0;\r\n  int first[10][10], second[10][10], multiply[10][10];\r\n \r\n  printf(\"Enter the number of rows and columns of first matrix\\n\");\r\n  scanf(\"%d%d\", &m, &n);\r\n  printf(\"Enter the elements of first matrix\\n\");\r\n \r\n  for (c = 0; c < m; c++)\r\n    for (d = 0; d < n; d++)\r\n      scanf(\"%d\", &first[c][d]);\r\n \r\n  printf(\"Enter the number of rows and columns of second matrix\\n\");\r\n  scanf(\"%d%d\", &p, &q);\r\n \r\n  if (n != p)\r\n    printf(\"Matrices with entered orders can\'t be multiplied with each other.\\n\");\r\n  else\r\n  {\r\n    printf(\"Enter the elements of second matrix\\n\");\r\n \r\n    for (c = 0; c < p; c++)\r\n      for (d = 0; d < q; d++)\r\n        scanf(\"%d\", &second[c][d]);\r\n \r\n    for (c = 0; c < m; c++) {\r\n      for (d = 0; d < q; d++) {\r\n        for (k = 0; k < p; k++) {\r\n          sum = sum + first[c][k]*second[k][d];\r\n        }\r\n \r\n        multiply[c][d] = sum;\r\n        sum = 0;\r\n      }\r\n    }\r\n \r\n    printf(\"Product of entered matrices:-\\n\");\r\n \r\n    for (c = 0; c < m; c++) {\r\n      for (d = 0; d < q; d++)\r\n        printf(\"%d\\t\", multiply[c][d]);\r\n \r\n      printf(\"\\n\");\r\n    }\r\n  }\r\n \r\n  return 0;\r\n}',	'Input:\r\nEnter the number of rows and columns of first matrix\r\n3\r\n3\r\nEnter the elements of first matrix\r\n1  2  0\r\n0  1  1\r\n2  0  1\r\nEnter the number of rows and columns of second matrix\r\n3\r\n3\r\nEnter the elements of second matrix\r\n1  1  2\r\n2  1  1\r\n1  2  1\r\n\r\nOutput:\r\nProduct of entered matrices:-\r\n5  3  4\r\n3  3  2\r\n3  4  5',	1,	'matrix,multiplication,product',	1),
(34,	'Spiral Matrix',	'2016-12-10 09:47:16.000000',	'JAVA',	'This is a java algorithm which accepts a number and creates a square matrix with the numbers printed in ascending order arranged in form of a spiral.<br>\r\n<img src=\"https://i2.wp.com/www.guideforschool.com/wp-content/uploads/2014/02/spiral-circular-matrix.jpg\" width=\"30%\">',	'import java.io.*;\r\nclass Spiral_Matrix\r\n    {\r\n        public static void main(String args[])throws IOException\r\n        {\r\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\r\n            System.out.print(\"Enter the number of elements : \");\r\n            int n=Integer.parseInt(br.readLine());\r\n \r\n            int A[][]=new int[n][n];\r\n            int k=1, c1=0, c2=n-1, r1=0, r2=n-1;\r\n \r\n            while(k<=n*n)\r\n                {\r\n                    for(int i=c1;i<=c2;i++)\r\n                    {\r\n                        A[r1][i]=k++;\r\n                    }\r\n \r\n                    for(int j=r1+1;j<=r2;j++)\r\n                    {\r\n                        A[j][c2]=k++;\r\n                    }\r\n \r\n                    for(int i=c2-1;i>=c1;i--)\r\n                    {\r\n                        A[r2][i]=k++;\r\n                    }\r\n \r\n                    for(int j=r2-1;j>=r1+1;j--)\r\n                    {\r\n                        A[j][c1]=k++;\r\n                    }\r\n \r\n                 c1++;\r\n                 c2--;\r\n                 r1++;\r\n                 r2--;\r\n                }\r\n   \r\n            /* Printing the Circular matrix */\r\n            System.out.println(\"The Circular Matrix is:\");\r\n            for(int i=0;i<n;i++)\r\n                {\r\n                    for(int j=0;j<n;j++)\r\n                        {\r\n                            System.out.print(A[i][j]+ \"\\t\");\r\n                        }\r\n                 System.out.println();\r\n                }\r\n        }\r\n    }',	'Input:\r\nEnter the number of elements : 4\r\n\r\nOutput:\r\nThe Circular Matrix is:\r\n1	2	3	4	\r\n12	13	14	5	\r\n11	16	15	6	\r\n10	9	8	7',	2,	'spiral,matrix',	1),
(35,	'Square Waveform',	'2016-12-10 09:47:16.000000',	'JAVA',	'This prints the Square Waveform for the given amplitude, wavelength and number\r\nThis accepts input in the form :\r\nAmplitude\r\nWavelength\r\nNumber of Waves',	'import java.util.*;\r\npublic class SquareWaveform {\r\n\r\n\r\n    public static void main(String args[]){\r\n        int dir,i,j,je,n,amp,wl;\r\n        int vlen;\r\n        Scanner sc = new Scanner(System.in);\r\n        amp = sc.nextInt();\r\n        wl = sc.nextInt();\r\n        n = sc.nextInt();\r\n        \r\n        int spos=amp; //start position\r\n        dir =0;         //direction = up =1\r\n        vlen = amp*2+1;\r\n        \r\n        int f = (wl+(wl-1))*n-(n-1);    //Total no of columns\r\n        \r\n        String a[][] = new String[vlen][f];\r\n        \r\n        for (i=0;i<f;i++)\r\n        {\r\n            for (j=0;j<vlen;j++)\r\n            a[j][i]=\" \";\r\n        }\r\n            \r\n        for (i=0;i<f;i++)\r\n        {\r\n            if (i%(wl-1)==0) //change direction if continuous column\r\n                dir = dir==1?0:1;\r\n            \r\n             if (i==0)   //starting from the middle\r\n                j=spos;\r\n             else \r\n                 j=dir==1?vlen-1:0;\r\n             \r\n            if (i==f-1)   //ending to the middle\r\n                je=spos;\r\n            else\r\n                je=0;\r\n             \r\n            if (dir==0) //Direction Down\r\n            {\r\n                if (i%(wl-1)==0) \r\n                 {for(;j<vlen;j++)\r\n                        a[j][i]=\"*\";\r\n                 }\r\n                 else\r\n                     a[vlen-1][i]=\"*\";\r\n            }\r\n            else        //Direction up\r\n            {\r\n                if (i%(wl-1)==0) \r\n                 {for(;j>=je;j--)\r\n                        a[j][i]=\"*\";\r\n                 }\r\n                 else\r\n                     a[0][i]=\"*\";\r\n                \r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n            for (j=0;j<vlen;j++)\r\n        {\r\n            for (i=0;i<f;i++)\r\n            {\r\n               // if (a[j][i].equals(\"*\"))\r\n                System.out.print(a[j][i]);\r\n               // else\r\n                  //  System.out.print(\" \");\r\n            }\r\n            System.out.print(\"\\n\");\r\n        }\r\n        \r\n    }//main ends here\r\n    \r\n}',	'Input:\r\n4\r\n4\r\n10\r\n\r\nOutput:\r\n****  ****  ****  ****  ****  ****  ****  ****  ****  ****   \r\n*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   \r\n*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   \r\n*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   \r\n*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\r\n   *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\r\n   *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\r\n   *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\r\n   ****  ****  ****  ****  ****  ****  ****  ****  ****  ****',	2,	'square,wave,form',	1),
(36,	'Swap Numbers',	'2016-12-10 09:47:16.000000',	'JAVA',	'This code demonstrates how to swap two numbers without using a third variable.',	'import java.util.Scanner;\r\n \r\npublic class Swapping{\r\npublic static void main(String[] args){\r\nScanner in = new Scanner(System.in);\r\nSystem.out.println(\"Enter the 1st number: \");\r\nint x = in.nextInt();\r\nSystem.out.println(\"Enter the 2nd number: \");\r\nint y = in.nextInt();\r\n \r\nSystem.out.println(\"Initial value of x: \"+x+\" and y: \"+y);\r\n \r\nx = x+y;\r\ny = x-y;\r\nx = x-y;\r\n \r\nSystem.out.println(\"After swapping value of x: \"+x+\" and y: \"+y);\r\n}\r\n}',	'Input:\nEnter the 1st number:\r\n 43\r\n Enter the 2nd number:\r\n 56\n\nOutput:\n Initial value of x: 43 and y: 56\r\n After swapping value of x: 56 and y: 43',	0,	'sawp,two,variables',	1),
(37,	'Floyd Triangle',	'2016-12-10 09:47:16.000000',	'JAVA',	'Floyd Triangle example : <br>\r\n1 <br>\r\n2 3 <br>\r\n4 5 6 <br>\r\n7 8 9 10',	'import java.util.Scanner;\r\n \r\npublic class FloydTriangle{\r\npublic static void main(String[] args){\r\nScanner in = new Scanner(System.in);\r\nSystem.out.println(\"Enter the number of rows which you want in your Floyd Triangle: \");\r\nint r = in.nextInt();\r\nint n=0;\r\nfor(int i=0; i&lt;r; i++){\r\nfor(int j=0; j&lt;=i; j++){\r\nSystem.out.print(++n+\" \");\r\n}\r\nSystem.out.println();\r\n}\r\n}\r\n}',	'Input:\r\nEnter the number of rows which you want in your Floyd Triangle:\r\n5\r\n\r\nOutput:\r\n1\r\n2 3\r\n4 5 6\r\n7 8 9 10\r\n11 12 13 14 15',	1,	'floyd,triangle',	1),
(38,	'Linked List',	'2016-12-10 09:47:16.000000',	'C',	'This program demonstrates the use of a linked list. The basic operations are given.<br>\r\n<img src=\"http://4.bp.blogspot.com/-9Z8_nZ162PI/Vf6Dti47G7I/AAAAAAAAC3w/4vQ7zXTx3hc/s1600/Singly%2Blinked%2Blist.PNG\">',	'#include<stdio.h>\r\n#include<stdlib.h>\r\n \r\nstruct node{\r\n    int data;\r\n    struct node *next;\r\n};\r\ntypedef struct node NODE;\r\n \r\nNODE* createNode(NODE *a,int item){\r\n    NODE *n;\r\n    n = (NODE *)malloc(sizeof(NODE));\r\n    n->data = item;\r\n    n->next = a;\r\n    return n;\r\n}\r\n \r\nNODE* removeNode(NODE *a){\r\n    NODE *  n;\r\n    n = a->next;\r\n    free(a);\r\n    return n;\r\n}\r\n \r\nvoid display(NODE *n){\r\n    NODE *p;\r\n    p=n;\r\n    while(1){\r\n        printf(\"%d  (%u) \\t\",p->data,p);\r\n        p = p->next;\r\n        if (p == NULL)  break;\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n \r\nNODE* reverse(NODE *n){\r\n    NODE *a,*b;\r\n    a = createNode(NULL,0);\r\n    b=n;\r\n    while(1){\r\n        a = createNode(a,b->data);\r\n        b = b->next;\r\n        if (b->next == NULL) break;\r\n    }\r\n    return a;\r\n}\r\n \r\nNODE* search(NODE* n,int item){\r\n    NODE *p;\r\n    p = n;\r\n \r\n    while(p!=NULL){\r\n \r\n        if (p->data == item)\r\n            return p;\r\n        p = p->next;\r\n    }\r\n    return NULL;\r\n}\r\n \r\nNODE* reverse2(NODE *n){\r\n    NODE *K,*P,*N;\r\n \r\n    P = n;\r\n    if (P->next !=NULL){\r\n        K = P->next;\r\n        P->next=NULL;\r\n        if (K->next!=NULL) N = K->next;\r\n    }\r\n    else\r\n        return n;  \r\n \r\n    while(N !=NULL){\r\n        K->next = P;\r\n        P = K;\r\n        K = N;\r\n        N = K->next;\r\n        if (N==NULL) {\r\n            K->next = P;\r\n        }\r\n    }\r\n    return K;\r\n}\r\n \r\nint main(){\r\n    NODE *list,*n2,*s;\r\n    int op,item;\r\n    list = NULL;    //head node\r\n   \r\n    while(1){\r\n        printf(\"Enter the choice\\n1.Add Element\\n2.Remove Element\\n3.Display Element\\n4.Reverse\\n5.Search\\n6.Exit\\n\");\r\n        scanf(\"%d\",&op);\r\n        switch(op){\r\n            case 1:\r\n                printf(\"Enter the element to insert\\n\");\r\n                scanf(\"%d\",&item);\r\n                list = createNode(list,item);\r\n                break;\r\n            case 2:\r\n                list = removeNode(list);\r\n                printf(\"The Element was deleted\");\r\n                break;\r\n            case 3:\r\n                display(list);\r\n                break;\r\n            case 4:\r\n                display(reverse2(list));\r\n                break;\r\n            case 5:\r\n                printf(\"Enter the element to search\\n\");\r\n                scanf(\"%d\",&item);\r\n                s=search(list,item);\r\n                if (s!=NULL)\r\n                    printf (\"Item found at %u\\n\",s);\r\n                else\r\n                    printf(\"Item couldn\'t be found\\n\");\r\n                break;\r\n            case 6:\r\n                return 0;\r\n        }\r\n    }\r\n   \r\n    return 0;\r\n}',	'Input:\r\nEnter the choice\r\n1.Add Element\r\n2.Remove Element\r\n3.Display Element\r\n4.Reverse\r\n5.Search\r\n6.Exit\r\n\r\nOutput:',	2,	'linked,list,pointer,structure',	1),
(39,	'Stack',	'2016-12-10 09:47:16.000000',	'C',	'The program represents the stack data structure',	'#include<stdio.h>\r\n\r\n#define max 5\r\n\r\n/*\r\n *    Stacks Program\r\n *    Author - Mridul Ganga\r\n *\r\n *    Single Stack Implementation\r\n *    using structures and fixed \r\n *    maximum value.\r\n *\r\n *    functions - push,pop,isFull,isEmpty\r\n *\r\n * */\r\n\r\n\r\nstruct stack{\r\n	int item[max];\r\n	int top;\r\n};\r\ntypedef struct stack STACK;\r\n\r\n//empty top=-1 full top=max-1\r\n\r\n//success = 1\r\n//failure = 0\r\n//other = -1\r\n\r\n\r\nint isEmpty(STACK *s)\r\n{\r\n	if (s->top==-1) return 1;//if empty send 1\r\n	return 0;\r\n}\r\n\r\nint isFull(STACK *s)\r\n{\r\n	if(s->top==max-1) return 1; //if full send 1\r\n	return 0;\r\n}\r\n\r\nint push(STACK *s,int itm){\r\n	if (isFull(s)) return 0;//stack full\r\n	\r\n	s->top++;		//increment top\r\n	s->item[s->top] = itm;	//then add item to new position\r\n	return 1;\r\n}\r\n\r\nint pop(STACK *s, int *itm)\r\n{\r\n	if (isEmpty(s)) return 0;//stack empty\r\n	\r\n	*itm = s->item[s->top];		//retrive current top\r\n	s->top--;			//decrement top\r\n	if (s->top==-1) return -1;\r\n	return 1;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n	STACK s1;\r\n	int option,item,i;\r\n	//initialise top value\r\n	s1.top = -1;\r\n	option=1;\r\n\r\n  while(option){\r\n	printf(\"Enter the Operation to do : \\n1. Push Element\\n2. Display Elements\\n3. Pop Element\\n0. Exit\\n \");\r\n	scanf(\"%d\",&option);\r\n	switch(option)\r\n	{\r\n		case 0:	//exit program\r\n		break;\r\n		case 1:	//push item\r\n			printf(\"Enter the Item to push\\n\");\r\n			scanf(\"%d\",&item);\r\n			if(push(&s1,item))\r\n				printf(\"The Item was Successfully Pushed\\n\");\r\n			else	//push fails when stack is full\r\n				printf(\"Stack Overflow\\n\");\r\n		break;\r\n		case 2:	//display items\r\n			if (isEmpty(&s1))\r\n			{printf(\"Stack Empty\\n\");break;}\r\n			printf(\"The Elements of the stack are : \\n\");\r\n			for (i=0;i<=s1.top;i++)\r\n				printf(\"%d\\n\",s1.item[i]);\r\n		break;\r\n		case 3:	//pop items\r\n			i = pop(&s1,&item);\r\n			if(i==-1)	//last element popped, returns -1\r\n				{\r\n					printf(\"%d has been popped\\n\",item);\r\n					printf(\"Stack Empty\\n\");\r\n				}\r\n			else if(i==0)	//stack is already empty\r\n				printf(\"Stack Underflow\\n\");\r\n			else\r\n				printf(\"%d has been popped\\n\",item);\r\n		break;\r\n	}\r\n  }//while ends here\r\n\r\nreturn 0;\r\n}',	'Input:\r\nEnter the Operation to do : \r\n1. Push Element\r\n2. Display Elements\r\n3. Pop Element\r\n0. Exit\r\n\r\n\r\nOutput:',	1,	'stack,array,fixed,size',	1),
(40,	'Matrix (swap row and columns)',	'2016-12-10 09:47:16.000000',	'C',	'A matrix program using dynamic memory Allocation to create 2d array and to swap specified rows and columns.',	'#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nvoid main()\r\n{\r\n	int *a,*b,c,r,i,j,option;\r\n	int s1,s2,tmp;\r\n\r\n	printf(\"Enter the number of Rows and Columns : \\n\");\r\n	scanf(\"%d%d\",&r,&c);\r\n\r\n	a = (int *) malloc(sizeof(int)*c*r);\r\n\r\n	printf(\"Enter the Elements of Matrix : \\n\");\r\n	for (i=0;i<r*c;i++)\r\n		scanf(\"%d\",a+i);\r\n\r\n	printf(\"The Entered array is : \\n\");\r\n	for (i=0;i<r;i++)\r\n	{\r\n		for (j=0;j<c;j++)\r\n		{\r\n			printf(\" %d \",*(a + i*c + j));\r\n		}\r\n		printf(\"\\n\");\r\n	}\r\n	\r\n	printf(\"Enter your choice \\n1.Swap two rows\\n2.Swap two columns\\n\");\r\n	scanf(\"%d\",&option);\r\n	\r\n	if(option==1)	//swap rows\r\n	{\r\n		printf(\"What two row numbers do you want to swap ? \\n\");\r\n		scanf(\"%d%d\",&s1,&s2);\r\n		\r\n		for (i=0;i<c;i++)\r\n		{\r\n			tmp = *(a+s1*r+i);\r\n			*(a+s1*r+i) = *(a+s2*r+i);\r\n			*(a+s2*r+i) = tmp;\r\n		}	\r\n	}\r\n	 else if(option==2)   //swap cols\r\n        {\r\n                printf(\"What two column numbers do you want to swap ? \\n\");\r\n                scanf(\"%d%d\",&s1,&s2);\r\n\r\n                \r\n		for (i=0;i<r;i++)\r\n                {\r\n                        tmp = *(a+i*r+s1);\r\n                        *(a+i*r+s1) = *(a+i*r+s2);\r\n                        *(a+i*r+s2) = tmp;\r\n                }\r\n        }\r\n \r\n	for (i=0;i<r;i++)\r\n	{\r\n		for (j=0;j<c;j++)\r\n			printf(\" %d \",*(a + i*c + j));\r\n		printf(\"\\n\");\r\n	}\r\n}',	'Input:\r\nEnter the number of Rows and Columns : \r\n3\r\n3\r\nEnter the Elements of Matrix : \r\n3 4 5\r\n6 7 8\r\n2 4 6\r\nThe Entered array is : \r\n 3  4  5 \r\n 6  7  8 \r\n 2  4  6 \r\nEnter your choice \r\n1.Swap two rows\r\n2.Swap two columns\r\n\r\n\r\nOutput:\r\n1\r\nWhat two row numbers do you want to swap ? \r\n0 2\r\n 2  4  6 \r\n 6  7  8 \r\n 3  4  5',	1,	'swap,matrix,2darray,dynamic,memory,allocation,rows,columns',	1),
(41,	'Binary Tree',	'2016-12-10 09:47:16.000000',	'C',	'A program to construct a binary search tree and to traverse the tree using the inorder, preorder and postorder methods.<br> \r\nExample tree :<br>\r\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Binary_tree.svg/192px-Binary_tree.svg.png\" style=\"width:150px;\">\r\n',	'#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\ntypedef struct nd{int data; struct nd *left,*right;} node;\r\n\r\nnode *getnode(){return ((node *) malloc(sizeof(node)));}\r\n\r\nnode *insert(node *first,int item){\r\n	node *tmp;\r\n\r\n	if (first==NULL){\r\n		tmp = getnode();\r\n		tmp->data = item;\r\n		tmp->left=NULL;	tmp->right=NULL;\r\n		first = tmp;\r\n		return tmp;\r\n	}\r\n\r\n	if (first->data >= item ){\r\n		if (first->left ==NULL){\r\n			tmp = getnode();\r\n			tmp->data = item;\r\n			first->left = tmp;\r\n			tmp->left = NULL; tmp->right = NULL;\r\n		}\r\n		else\r\n			insert(first->left,item);\r\n	}\r\n\r\n	if (first->data < item){\r\n		if (first->right==NULL){\r\n			tmp = getnode();\r\n			tmp->data = item;\r\n			first->right = tmp;\r\n			tmp->left=NULL;	tmp->right=NULL;\r\n		}\r\n		else\r\n			insert(first->right,item);\r\n	}\r\n}\r\n\r\n//binary tree \r\n//	+\r\n//a		b\r\n\r\nvoid inorder(node *root){	//left - root - right	a+b\r\n	//display left\r\n	if (root->left!=NULL)\r\n		inorder(root->left);\r\n	//display root\r\n	printf(\"%d\\t\",root->data);\r\n	printf(\"\\n\");\r\n	//display right\r\n	if (root->right!=NULL)\r\n		inorder(root->right);\r\n}\r\n\r\nvoid preorder(node *root){	//root - left - right	+ab\r\n	printf(\"%d\\t\",root->data);\r\n	printf(\"\\n\");\r\n	if (root->left!=NULL)\r\n		preorder(root->left);\r\n	if (root->right!=NULL)\r\n		preorder(root->right);\r\n}\r\n\r\nvoid postorder(node *root){	//left - right - root	ab+\r\n        if (root->left!=NULL)\r\n                postorder(root->left);\r\n        if (root->right!=NULL)\r\n                postorder(root->right);\r\n	printf(\"%d\\t\",root->data);\r\n        printf(\"\\n\");\r\n\r\n}\r\n//example used\r\n//      5\r\n//  3      7\r\n//2   4  6  15\r\n\r\nint main(){\r\n	node *n;\r\n	int op,item;\r\n	n = NULL;\r\n//	n = insert(n,5);//root node\r\n	while(1){	\r\n		printf(\"Enter your choice :\\n1.Add element\\n2. Inorder\\n3. Preorder\\n4. Postorder\\n5. Exit\\n\");\r\n		scanf(\"%d\",&op);\r\n	switch(op){\r\n		case 1:\r\n			printf(\"Enter the item to insert\\n\");\r\n			scanf(\"%d\",&item);\r\n			if (n==NULL)	n = insert(n,item);\r\n			else	insert(n,item);\r\n			break;\r\n		case 2:\r\n			printf(\"Inorder\\n\");\r\n			inorder(n);\r\n			break;\r\n		case 3:\r\n			printf(\"\\nPreorder\\n\");\r\n			preorder(n);\r\n			break;\r\n		case 4:\r\n			printf(\"\\nPostorder\\n\");\r\n			postorder(n);\r\n			break;\r\n		case 5:\r\n			return 2-2;\r\n	}//switch end\r\n	}//while end\r\n	return 5-5;\r\n}',	'Input:\r\nEnter your choice :\r\n1.Add element\r\n2. Inorder\r\n3. Preorder\r\n4. Postorder\r\n5. Exit\r\n\r\n\r\nOutput:\r\nInorder\r\n2	\r\n3	\r\n4	\r\n5	\r\n6	\r\n7	\r\n15	\r\n\r\nPreorder\r\n5	\r\n3	\r\n2	\r\n4	\r\n7	\r\n6	\r\n15	\r\n\r\nPostorder\r\n2	\r\n4	\r\n3	\r\n6	\r\n15	\r\n7	\r\n5',	2,	'binary,search,tree,data,structure,inorder,preorder,postorder',	1),
(42,	'Infix to Postfix Conversion',	'2016-12-10 09:47:16.000000',	'C',	'Application of stacks to demonstrate the conversion of an infix expression to a postfix expression.',	'#include<stdio.h>\r\n#include<ctype.h>\r\n\r\n#define MAX 100\r\n\r\ntypedef struct stack{\r\n    char data[MAX];\r\n    int top;\r\n}stack;\r\n\r\n//empty top=-1 full top=max-1\r\n\r\nint priority(char x){\r\n    if ( x==\'(\' )\r\n        return 0;\r\n    else if ( x==\'+\' || x==\'-\' )\r\n        return 1;\r\n    else if ( x==\'*\' || x==\'/\' || x==\'%\' )\r\n        return 2;\r\n    return 3;\r\n}\r\n\r\nint push(stack *s,char x){\r\n    if (s->top==MAX-1) return 0;   //stack full\r\n    s->data[++(s->top)] = x;\r\n    return 1;\r\n}\r\n\r\nchar pop(stack *s){\r\n    char x;\r\n    if (s->top==-1) return 0;\r\n    x = s->data[(s->top)--];\r\n    return x;\r\n}\r\n\r\nchar top(stack *s){\r\n    return s->data[s->top];\r\n}\r\n\r\nint main(){\r\n    stack s;\r\n    char x;\r\n    int token;\r\n\r\n    s.top=-1;\r\n\r\n    printf(\"Enter infix expression:\\n\");\r\n    while((token=getchar())!=\'\\n\'){\r\n        if(isalnum(token))\r\n            printf(\"%c\",token);\r\n        else //1\r\n        {\r\n            if(token == \'(\')\r\n                push(&s,\'(\');\r\n            else //2\r\n            {\r\n                if(token == \')\')\r\n                    while((x=pop(&s))!=\'(\')\r\n                        printf(\"%c\",x);\r\n                else //3\r\n                {\r\n                    while(priority(token) <= priority(top(&s)) && s.top!=-1)\r\n                    {\r\n                        x=pop(&s);\r\n                        printf(\"%c\",x);\r\n                    }\r\n                    push(&s,token);\r\n                } //3 end\r\n            } //2 end\r\n        }  //1 end\r\n\r\n    }//while ends\r\n\r\n    while(s.top!=-1)\r\n    {\r\n        x=pop(&s);\r\n        printf(\"%c\",x);\r\n    }\r\n\r\n    return 0;\r\n}',	'Input:\r\nEnter infix expression:\r\n2+9/3-5*(3+2)-4 \r\n\r\nOutput:\r\n2 9 3/+5 3 2+*-4-',	2,	'infix,postfix,conversion',	1),
(43,	'Postfix Evaluation',	'2016-12-10 09:47:16.000000',	'C',	'Application of stacks to evaluate a postfix expresison',	'#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\n#define MAX 100\r\n\r\ntypedef struct stk{\r\n	int top;\r\n	float data[MAX];\r\n}stack;\r\n\r\nstack s;\r\n\r\nfloat pop(){\r\n	if (s.top==-1)	return 0;\r\n	return s.data[(s.top)--];\r\n}\r\n\r\nint push(float item){\r\n	if (s.top==MAX-1) return 0;\r\n	s.data[++(s.top)] = item; return 1;	\r\n}\r\n\r\nfloat eval(char a[]){\r\n	int i;\r\n	float rhs,lhs;\r\n	char ch;\r\n	i = 0;\r\n	while((ch=a[i++])!=\'\\0\')\r\n	{\r\n		if (ch >= \'0\' && ch <= \'9\' ){\r\n			push((float) (ch -\'0\'));}\r\n		else{\r\n			rhs = pop(); lhs=pop();	\r\n			switch (ch){\r\n                        	case \'+\':push(lhs+rhs);break;\r\n				case \'-\':push(lhs-rhs);break;\r\n				case \'*\':push(lhs*rhs);break;\r\n				case \'/\':push(lhs/rhs);break;	\r\n                	}\r\n\r\n		}\r\n\r\n	}\r\n	return pop();\r\n}\r\n\r\nint main(){\r\n	char a[100];\r\n	s.top=-1;\r\n	printf(\"Enter the postfix expression \\n\");\r\n	scanf(\"%s\",a);\r\n	printf(\"%s\\n\",a);\r\n	printf(\"\\n%f\\n\",eval(a));\r\n	return 0;\r\n}',	'Input:\r\nEnter the postfix expression \r\n23+5*3-2/\r\n\r\n\r\nOutput:\r\n11.000000',	2,	'postfix,evaluation,stack,application',	1),
(44,	'Try Catch (wrong input and division by 0)',	'2016-12-10 09:47:16.000000',	'CPP',	'This program demonstrates the use of try catch to check for wrong input and division by zero error and throw an exception when it occurs',	'#include<iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n    int a,b;\r\n    try{\r\n        cout<<\"Enter two integers\\n\";\r\n        cin>>a;\r\n        cin>>b;\r\n        if (cin.fail()) throw 0;\r\n        if (b==0) throw 1;\r\n        cout<<a/b<<\"\\n\";\r\n\r\n    }catch(int i){\r\n        if (i==0)   cout<<\"Wrong Input\\n\";\r\n        if (i==1)   cout<<\"Division by zero\\n\";\r\n    }\r\n    return 0;\r\n}',	'Input:\r\nEnter two Integers\r\n9 3\r\n9 a\r\na 3\r\n3 0\r\n\r\nOutput:\r\n3\r\nWrong Input\r\nWrong Input\r\nDivision by zero',	1,	'try,catch,exception,division,by,zero,wrong,input',	1),
(45,	'Read File in C++',	'2016-12-10 09:47:16.000000',	'CPP',	'This is a demonstration of reading the contents of a file in C++ using the fstream class.\r\nThe getline() function is used to get the next line in the file. The eof() function marks the end of the file.',	'#include<iostream>\r\n#include<fstream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    string filename;\r\n    cout<<\"Enter the filename to open for read\\n\";\r\n    cin>>filename;\r\n\r\n    ifstream file1(filename.data());\r\n\r\n    while(!file1.eof()){\r\n        string line;\r\n        getline(file1,line);\r\n        cout<<line<<\"\\n\";\r\n    }\r\n\r\n    file1.close();\r\n    return 0;\r\n\r\n}',	'Input:\r\nEnter the filename to open for read\r\ntest.txt\r\n\r\nOutput:\r\nthis is a test file\r\nline two',	1,	'file,fstream,ifstream,input,read',	1),
(46,	'Write / Append file in C++',	'2016-12-10 09:47:16.000000',	'CPP',	'This is demonstration of writing to a file in c++ using the fstream and ofstream object, the ios::out can be replaced by other values like ios::append to open file for appending.',	'#include<iostream>\r\n#include<fstream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    string filename;\r\n    cout<<\"Enter the filename to open for Write\\n\";\r\n    cin>>filename;\r\n\r\n    ofstream file1(filename.data(),ios::out);   \r\n    //write: ios::out\r\n    //append: ios::app\r\n    //truncate and open ios::trunc\r\n    //move cursor to end of file ios::ate       \r\n\r\n    string content = \"This is the first line\\nThis is second\";\r\n    file1<<content;\r\n\r\n    file1.close();\r\n\r\n}',	'Input:\r\nEnter the filename to open for write\r\ntest.txt\r\n\r\nOutput:',	1,	'fstream,ofstream,write,output,file',	1),
(47,	'Python Cheat sheet',	'2016-12-10 09:47:16.000000',	'PYTHON',	'This is a python 2.7 cheat sheet. This has all the commonly used things in python. If you have any suggestions then feel free to comment below. Always looking forward to improve this.',	'#take input\r\nx = raw_input()\r\n\r\n#variables\r\nnum = 123\r\nfNum = float(123)\r\nfNum2 = 123.0\r\nstring1 = \"Some Text\"\r\n\r\n#if else\r\nif x==1 :\r\n	#do something\r\n\r\n#array or List\r\nl1 = []\r\nl2 = [\"one\",\"two\",\"three\"]\r\nl3 = [1,2,3]\r\nl3.append(4)\r\n\r\n#add lists\r\neven_numbers = [2,4,6,8]\r\nodd_numbers = [1,3,5,7]\r\nall_numbers = odd_numbers + even_numbers\r\nmulList = even_numbers*5\r\n\r\n#print num,string,array\r\nprint X\r\nprint \"xyz\"\r\n\r\n#print each array item\r\nfor x in mylist:\r\n    print x\r\n\r\n#for loop in range\r\nfor i in range (1,10+1) #- 1 to 10\r\n	print str(i)\r\n\r\n#arithmetic\r\nnumber = 1 + 2 * 3 / 4.0\r\nremainder = 11 % 3\r\nsquared = 7 ** 2	#7 power 2 pow(7,2)\r\ncubed = 2 ** 3\r\n\r\n#operators on strings\r\naddit = \"string 1 \" + \"String 2\"\r\nlotsofhellos = \"hello\" * 10\r\n\r\n#formating strings\r\nprint \"%s is %d years old.\" % (\"name\", 18)\r\n\r\n#list to string\r\nmylist = [1,2,3]\r\nprint \"A list: %s\" % mylist\r\n\r\n#basic argument specifiers\r\n%s - String (or any object with a string representation, like numbers)\r\n%d - Integers\r\n%f - Floating point numbers\r\n%.<number of digits>f - Floating point numbers with a fixed amount of digits to the right of the dot.\r\n%x/%X - Integers in hex representation (lowercase/uppercase)\r\n\r\n\r\n\r\n#basic string operations\r\nastring = \"Hello world!\"\r\nastring2 = \'Hello world!\'\r\n\r\nprint \"single quotes are \' \'\"\r\nprint len(astring)	#21\r\n\r\nprint astring.index(\"o\")	#4 index starts at 0\r\n\r\nprint astring.count(\"l\")	#no of l in hello world = 3\r\n\r\nprint astring[3:7]		#print from 3 to 6 position\r\n\r\n#general form for slice [start:stop:step]\r\nprint astring[3:7:1]	#skips 1 character\r\n\r\n#reverse a string\r\nprint astring[::-1]\r\n\r\nprint astring.upper()\r\nprint astring.lower()\r\n\r\nprint astring.startswith(\"Hello\")\r\nprint astring.endswith(\"asdfasdfasdf\")	#its never gonna end with that I know\r\n\r\n#create a list from a delimeter\r\nlist1 = astring.split(\" \")	#split from spaces\r\n\r\n\r\n\r\n\r\nx = 2\r\nprint x == 2 # prints out True\r\nprint x == 3 # prints out False\r\nprint x < 3  # prints out True\r\n\r\nprint not False # Prints out True\r\nprint (not False) == (False) # Prints out False\r\n\r\n\r\n#check if an element is there in a list\r\nname=\"John\"\r\nif name in [\"John\", \"Rick\"]:\r\n	#its there\r\n\r\n\r\n\r\n#the if elseif and else stuff\r\nif <statement is true>:\r\n    <do something>\r\n    ....\r\n    ....\r\nelif <another statement is true>: # else if\r\n    <do something else>\r\n    ....\r\n    ....\r\nelse:\r\n    <do another thing>\r\n    ....\r\n    ....\r\n\r\n\r\n#LOOPS\r\n# Prints out the numbers 0,1,2,3,4\r\nfor x in xrange(5): # or range(5)\r\n    print x\r\n\r\n# Prints out 3,4,5\r\nfor x in xrange(3, 6): # or range(3, 6)\r\n    print x\r\n\r\n# Prints out 0,1,2,3,4\r\ncount = 0\r\nwhile count < 5:\r\n    print count\r\n    count += 1  # This is the same as count = count + 1\r\n\r\n#break and continue\r\n# Prints out 0,1,2,3,4\r\ncount = 0\r\nwhile True:\r\n    print count\r\n    count += 1\r\n    if count >= 5:\r\n        break\r\n\r\n# Prints out only odd numbers - 1,3,5,7,9\r\nfor x in xrange(10):\r\n    # Check if x is even\r\n    if x % 2 == 0:\r\n        continue\r\n    print x\r\n\r\n#functions\r\ndef my_function():\r\n    print \"Hello From My Function!\"\r\n\r\ndef sum_two_numbers(a, b):\r\n    return a + b\r\n\r\nmy_function()\r\n\r\n\r\n#classes\r\n\r\nclass MyClass:\r\n    variable = \"blah\"\r\n\r\n    def function(self):\r\n        print \"This is a message inside the class.\"\r\n\r\n#using classes\r\nobjectX = MyClass()\r\nobjectX.variable = \"blah blah\"\r\nmyobjectx.function()\r\n\r\n\r\n#dictionaries\r\nphonebook = {}\r\nphonebook[\"John\"] = 938477566\r\nphonebook[\"Jack\"] = 938377264\r\nphonebook[\"Jill\"] = 947662781\r\n\r\n#in JSON Style\r\nphonebook = {\r\n    \"John\" : 938477566,\r\n    \"Jack\" : 938377264,\r\n    \"Jill\" : 947662781\r\n}\r\n\r\n#check if key exists\r\nif \'key\' in phonebook:\r\n    print \"It Exists\"\r\n\r\n#using for loop with it\r\nfor key, value in phonebook.iteritems():\r\n    print \"Phone number of %s is %d\" % (key, value)\r\n\r\n#remove any item\r\ndel phonebook[\"John\"]\r\n#or\r\nphonebook.pop(\"John\")\r\n\r\n\r\n#modules and packages\r\n# import the library\r\nimport urllib\r\n\r\n# use it\r\nurllib.urlopen(...)\r\n\r\n#explore\r\ndir(urllib)',	'Input:\r\n\r\n\r\nOutput:',	1,	'python,2.7,cheat,sheet,simple',	1),
(48,	'Point inside Circle',	'2016-12-10 09:47:16.000000',	'PYTHON',	'This is a python program to check if a given point is inside a circle of given center and radius. See code for usage.',	'def isInsideCircle(circ_x,circ_y,rad,x,y):\r\n    if (x-circ_x)*(x-circ_x)+(y-circ_y)*(y-circ_y)<= rad*rad :\r\n        return True\r\n    return False\r\n\r\n#usage\r\n#center of circle  = (cx,cy)\r\n#radius of circle = radius\r\n#point to check = (px,py)\r\n\r\nprint isInsideCircle(0,0,5,1,3)\r\nprint isInsideCircle(0,0,5,2,6)\r\n',	'Input:\r\nGiven\r\n\r\nOutput:\r\nTrue \r\nFalse',	0,	'circle,center,radius,point,inside',	1),
(50,	'Shell Sort',	'2016-12-10 12:55:55.438307',	'PYTHON',	'<b>Shellsort</b>, also known as Shell sort or <b>Shell\'s method</b>, is an <i>in-place comparison sort</i>. It can be seen as either a <b>generalization</b> of sorting by exchange (bubble sort) or sorting by insertion (insertion sort).',	'def shellSort(arr):\r\n \r\n    # Start with a big gap, then reduce the gap\r\n    n = len(arr)\r\n    gap = n/2\r\n \r\n    # Do a gapped insertion sort for this gap size.\r\n    # The first gap elements a[0..gap-1] are already in gapped \r\n    # order keep adding one more element until the entire array\r\n    # is gap sorted\r\n    while gap > 0:\r\n \r\n        for i in range(gap,n):\r\n \r\n            # add a[i] to the elements that have been gap sorted\r\n            # save a[i] in temp and make a hole at position i\r\n            temp = arr[i]\r\n \r\n            # shift earlier gap-sorted elements up until the correct\r\n            # location for a[i] is found\r\n            j = i\r\n            while  j >= gap and arr[j-gap] >temp:\r\n                arr[j] = arr[j-gap]\r\n                j -= gap\r\n \r\n            # put temp (the original a[i]) in its correct location\r\n            arr[j] = temp\r\n        gap /= 2\r\n \r\n \r\n# Driver code to test above\r\narr = [ 12, 34, 54, 2, 3]\r\n \r\nn = len(arr)\r\nprint (\"Array before sorting:\")\r\nfor i in range(n):\r\n    print(arr[i]),\r\n \r\nshellSort(arr)\r\n \r\nprint (\"\\nArray after sorting:\")\r\nfor i in range(n):\r\n    print(arr[i]),\r\n ',	'Array before sorting:\r\n12 34 54 2 3\r\nArray after sorting:\r\n2 3 12 34 54',	2,	'shell,sort,algorithm',	1),
(51,	'Reverse stack using Recursion',	'2016-12-10 16:33:32.162949',	'C',	'This C program, using recursion, reverses a stack content. Stack here is represented using a linked list.',	'/*\r\n * C Program to Reverse a Stack using Recursion\r\n */\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nstruct node\r\n{\r\n    int a;\r\n    struct node *next;\r\n};\r\n \r\nvoid generate(struct node **);\r\nvoid display(struct node *);\r\nvoid stack_reverse(struct node **, struct node **);\r\nvoid delete(struct node **);\r\n \r\nint main()\r\n{\r\n    struct node *head = NULL;\r\n \r\n    generate(&head);\r\n    printf(\"\\nThe sequence of contents in stack\\n\");\r\n    display(head);\r\n    printf(\"\\nInversing the contents of the stack\\n\");\r\n    if (head != NULL)\r\n    {\r\n        stack_reverse(&head, &(head->next));\r\n    }\r\n    printf(\"\\nThe contents in stack after reversal\\n\");\r\n    display(head);\r\n    delete(&head);\r\n \r\n    return 0;\r\n}\r\n \r\nvoid stack_reverse(struct node **head, struct node **head_next)\r\n{\r\n    struct node *temp;\r\n \r\n    if (*head_next != NULL)\r\n    {\r\n         temp = (*head_next)->next;\r\n        (*head_next)->next = (*head);\r\n        *head = *head_next;\r\n        *head_next = temp;\r\n        stack_reverse(head, head_next);\r\n    }\r\n}\r\n \r\nvoid display(struct node *head)\r\n{\r\n    if (head != NULL)\r\n    {\r\n        printf(\"%d  \", head->a);\r\n        display(head->next);\r\n    }\r\n}\r\n \r\nvoid generate(struct node **head)\r\n{\r\n    int num, i;\r\n    struct node *temp;\r\n \r\n    printf(\"Enter length of list: \");\r\n    scanf(\"%d\", &num);\r\n    for (i = num; i > 0; i--)\r\n    {\r\n        temp = (struct node *)malloc(sizeof(struct node));\r\n        temp->a = i;\r\n        if (*head == NULL)\r\n        {\r\n            *head = temp;\r\n            (*head)->next = NULL;\r\n        }\r\n        else\r\n        {\r\n            temp->next = *head;\r\n            *head = temp;\r\n        }\r\n    }\r\n}\r\n \r\nvoid delete(struct node **head)\r\n{\r\n    struct node *temp;\r\n    while (*head != NULL)\r\n    {\r\n        temp = *head;\r\n        *head = (*head)->next;\r\n        free(temp);\r\n    }\r\n}',	'Enter length of list: 10\r\n \r\nThe sequence of contents in stack\r\n1  2  3  4  5  6  7  8  9  10  \r\nInversing the contents of the stack\r\n \r\nThe contents in stack after reversal\r\n10  9  8  7  6  5  4  3  2  1',	2,	'stack,recursion,linked,list,reverse',	1),
(52,	'Matrix Multiplication using Recursion',	'2016-12-10 16:56:52.897511',	'C',	'The following C program, using recursion, performs Matrix multiplication of two matrices and displays the result. We use 2 D array to represent a matrix and resulting matrix is stored in a different matrix.',	'/*\r\n * C Program to Perform Matrix Multiplication using Recursion\r\n */\r\n#include <stdio.h>\r\n \r\nvoid multiply(int, int, int [][10], int, int, int [][10], int [][10]);\r\nvoid display(int, int, int[][10]);\r\n \r\nint main()\r\n{\r\n    int a[10][10], b[10][10], c[10][10] = {0};\r\n    int m1, n1, m2, n2, i, j, k;\r\n \r\n    printf(\"Enter rows and columns for Matrix A respectively: \");\r\n    scanf(\"%d%d\", &m1, &n1);\r\n    printf(\"Enter rows and columns for Matrix B respectively: \");\r\n    scanf(\"%d%d\", &m2, &n2);\r\n    if (n1 != m2)\r\n    {\r\n        printf(\"Matrix multiplication not possible.\\n\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"Enter elements in Matrix A:\\n\");\r\n        for (i = 0; i < m1; i++)\r\n        for (j = 0; j < n1; j++)\r\n        {\r\n            scanf(\"%d\", &a[i][j]);\r\n        }\r\n        printf(\"\\nEnter elements in Matrix B:\\n\");\r\n        for (i = 0; i < m2; i++)\r\n        for (j = 0; j < n2; j++)\r\n        {\r\n            scanf(\"%d\", &b[i][j]);\r\n        }\r\n        multiply(m1, n1, a, m2, n2, b, c);\r\n    }\r\n    printf(\"On matrix multiplication of A and B the result is:\\n\");\r\n    display(m1, n2, c);\r\n}\r\n \r\nvoid multiply (int m1, int n1, int a[10][10], int m2, int n2, int b[10][10], int c[10][10])\r\n{\r\n    static int i = 0, j = 0, k = 0;\r\n \r\n    if (i >= m1)\r\n    {\r\n        return;\r\n    }\r\n    else if (i < m1)\r\n    {\r\n        if (j < n2)\r\n        {\r\n            if (k < n1)\r\n            {\r\n                c[i][j] += a[i][k] * b[k][j];\r\n                k++;\r\n                multiply(m1, n1, a, m2, n2, b, c);\r\n            }\r\n            k = 0;\r\n            j++;\r\n            multiply(m1, n1, a, m2, n2, b, c);\r\n        }\r\n        j = 0;\r\n        i++;\r\n        multiply(m1, n1, a, m2, n2, b, c);\r\n    }\r\n}\r\n \r\nvoid display(int m1, int n2, int c[10][10])\r\n{\r\n    int i, j;\r\n \r\n    for (i = 0; i < m1; i++)\r\n    {\r\n        for (j = 0; j < n2; j++)\r\n        {\r\n            printf(\"%d  \", c[i][j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}',	'Enter rows and columns for Matrix A respectively: 2\r\n2\r\nEnter rows and columns for Matrix B respectively: 2\r\n2\r\nEnter elements in Matrix A:\r\n12 56\r\n45 78\r\n \r\nEnter elements in Matrix B:\r\n2 6\r\n5 8\r\nOn matrix multiplication of A and B the result is:\r\n304  520  \r\n480  894',	2,	'matrix,multiplication,product,recursion',	1),
(53,	'Binary Search using Recursion',	'2016-12-10 17:00:27.286699',	'C',	'This C program, using recursion, performs <b>binary search.</b> In this program an array of random number is generated. The user is asked to enter a key. The array of random numbers are sorted and then the binary search operation is performed based on the key.',	'/*\r\n * C Program to Perform Binary Search using Recursion\r\n */\r\n#include <stdio.h>\r\n \r\nvoid binary_search(int [], int, int, int);\r\nvoid bubble_sort(int [], int);\r\n \r\nint main()\r\n{\r\n    int key, size, i;\r\n    int list[25];\r\n \r\n    printf(\"Enter size of a list: \");\r\n    scanf(\"%d\", &size);\r\n    printf(\"Generating random numbers\\n\");\r\n    for(i = 0; i < size; i++)\r\n    {\r\n        list[i] = rand() % 100;\r\n        printf(\"%d  \", list[i]);\r\n    }\r\n    bubble_sort(list, size);\r\n    printf(\"\\n\\n\");\r\n    printf(\"Enter key to search\\n\");\r\n    scanf(\"%d\", &key);\r\n    binary_search(list, 0, size, key);\r\n \r\n}\r\n \r\nvoid bubble_sort(int list[], int size)\r\n{\r\n    int temp, i, j;\r\n    for (i = 0; i < size; i++)\r\n    {\r\n        for (j = i; j < size; j++)\r\n        {\r\n            if (list[i] > list[j])\r\n            {\r\n                temp = list[i];\r\n                list[i] = list[j];\r\n                list[j] = temp;\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\nvoid binary_search(int list[], int lo, int hi, int key)\r\n{\r\n    int mid;\r\n \r\n    if (lo > hi)\r\n    {\r\n        printf(\"Key not found\\n\");\r\n        return;\r\n    }\r\n    mid = (lo + hi) / 2;\r\n    if (list[mid] == key)\r\n    {\r\n        printf(\"Key found\\n\");\r\n    }\r\n    else if (list[mid] > key)\r\n    {\r\n        binary_search(list, lo, mid - 1, key);\r\n    }\r\n    else if (list[mid] < key)\r\n    {\r\n        binary_search(list, mid + 1, hi, key);\r\n    }\r\n}\r\n}',	'Enter size of a list: 10\r\nGenerating random numbers\r\n83  86  77  15  93  35  86  92  49  21  \r\n \r\nEnter key to search\r\n21\r\nKey found',	1,	'binary,search,recursion',	1),
(54,	'Queue using Array',	'2016-12-10 17:05:33.697221',	'C',	'This C Program implements a <b>queue</b> using array. Queue is a <i>First-In-First-Out (FIFO)</I> data structure.<br>\r\n<img src=\"http://scanftree.com/Data_Structure/queues.png\">',	'/*\r\n * C Program to Implement a Queue using an Array\r\n */\r\n#include <stdio.h>\r\n \r\n#define MAX 50\r\nint queue_array[MAX];\r\nint rear = - 1;\r\nint front = - 1;\r\nmain()\r\n{\r\n    int choice;\r\n    while (1)\r\n    {\r\n        printf(\"1.Insert element to queue \\n\");\r\n        printf(\"2.Delete element from queue \\n\");\r\n        printf(\"3.Display all elements of queue \\n\");\r\n        printf(\"4.Quit \\n\");\r\n        printf(\"Enter your choice : \");\r\n        scanf(\"%d\", &choice);\r\n        switch (choice)\r\n        {\r\n            case 1:\r\n            insert();\r\n            break;\r\n            case 2:\r\n            delete();\r\n            break;\r\n            case 3:\r\n            display();\r\n            break;\r\n            case 4:\r\n            exit(1);\r\n            default:\r\n            printf(\"Wrong choice \\n\");\r\n        } /*End of switch*/\r\n    } /*End of while*/\r\n} /*End of main()*/\r\ninsert()\r\n{\r\n    int add_item;\r\n    if (rear == MAX - 1)\r\n    printf(\"Queue Overflow \\n\");\r\n    else\r\n    {\r\n        if (front == - 1)\r\n        /*If queue is initially empty */\r\n        front = 0;\r\n        printf(\"Inset the element in queue : \");\r\n        scanf(\"%d\", &add_item);\r\n        rear = rear + 1;\r\n        queue_array[rear] = add_item;\r\n    }\r\n} /*End of insert()*/\r\n \r\ndelete()\r\n{\r\n    if (front == - 1 || front > rear)\r\n    {\r\n        printf(\"Queue Underflow \\n\");\r\n        return ;\r\n    }\r\n    else\r\n    {\r\n        printf(\"Element deleted from queue is : %d\\n\", queue_array[front]);\r\n        front = front + 1;\r\n    }\r\n} /*End of delete() */\r\ndisplay()\r\n{\r\n    int i;\r\n    if (front == - 1)\r\n        printf(\"Queue is empty \\n\");\r\n    else\r\n    {\r\n        printf(\"Queue is : \\n\");\r\n        for (i = front; i <= rear; i++)\r\n            printf(\"%d \", queue_array[i]);\r\n        printf(\"\\n\");\r\n    }\r\n}',	'1.Insert element to queue\r\n2.Delete element from queue\r\n3.Display all elements of queue\r\n4.Quit\r\nEnter your choice : 1\r\nInset the element in queue : 10\r\n1.Insert element to queue\r\n2.Delete element from queue\r\n3.Display all elements of queue\r\n4.Quit\r\nEnter your choice : 1\r\nInset the element in queue : 15\r\n1.Insert element to queue\r\n2.Delete element from queue\r\n3.Display all elements of queue\r\n4.Quit\r\nEnter your choice : 1\r\nInset the element in queue : 20\r\n1.Insert element to queue\r\n2.Delete element from queue\r\n3.Display all elements of queue\r\n4.Quit\r\nEnter your choice : 1\r\nInset the element in queue : 30\r\n1.Insert element to queue\r\n2.Delete element from queue\r\n3.Display all elements of queue\r\n4.Quit\r\nEnter your choice : 2\r\nElement deleted from queue is : 10\r\n1.Insert element to queue\r\n2.Delete element from queue\r\n3.Display all elements of queue\r\n4.Quit\r\nEnter your choice : 3\r\nQueue is :\r\n15 20 30\r\n1.Insert element to queue\r\n2.Delete element from queue\r\n3.Display all elements of queue\r\n4.Quit\r\nEnter your choice : 4',	1,	'queue,array,fifo',	1);

-- 2016-12-11 10:05:43
